// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client {
  provider = "prisma-client-js"     
}

model Board {
  id             String @id @default(uuid())
  orgId          String
  title          String
  imagesId        String
  imagesThumbUrl  String @db.Text
  imagesFullUrl   String @db.Text
  imagesUserName  String @db.Text
  imagesLinksHTML String @db.Text
  list            List[]

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model List {
  id       String @id @default(uuid())
  title    String
  order    Int

  boardId  String
  board    Board @relation(fields : [boardId], references : [id], onDelete : Cascade)

  cards    Card[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id          String @id @default(uuid())
  title       String
  order       Int
  description String? @db.Text

  listId      String
  list        List @relation(fields : [listId], references : [id], onDelete : Cascade)

  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id         String @id @default(uuid())
  orgId      String
  action     ACTION
  entityId   String
  entityType ENTITY_TYPE
  entityTitle String
  userId     String
  userImage  String @db.Text
  userName   String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}